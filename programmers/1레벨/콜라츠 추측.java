// 콜라츠 추측
/*
1-1. 입력된 수가 짝수라면 2로 나눕니다. 
1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다. 
2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다. 

 ex) 주어진 수가 6이라면 6 → 3 → 10 → 5 → 16 → 8 → 4 → 2 → 1 이 되어 총 8번 만에 1이 됨.
  	  위 작업을 몇 번이나 반복해야 하는지 반환
  	  단, 주어진 수가 1인 경우에는 0을, 작업을 500번 반복할 때까지 1이 되지 않는다면 –1을 반환 
*/ 

class Solution {
    public int solution(int num) {
        int answer = 0;
		//num이 1이될때까지
		while(num!=1) {
			if(num%2==0) {//짝수라면
				num/=2;
			}else {//홀수라면
				num=num*3+1;
			}
			answer++;
			if(answer>400) {
				if(num!=1)
				answer = -1;
				break;
			}
		}        
        return answer;
    }
}

// 문제에 오류가 있는 것 같음. 예시로 나온 626331은 488번 반복하면 1이 되는데
// 500번 반복할 때까지 1이 되지 않는다면 -1을 반환하라는 문제에 부합함.
// 그래서 400번 반복할 때까지로 바꿔서 문제를 제출했더니 통과함. 
